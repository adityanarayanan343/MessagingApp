generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  email         String         @unique
  password      String
  firstName     String?
  lastName      String?
  profilePic    String?       // URL to profile picture
  status        String?       // Custom status message
  lastSeen      DateTime?     // Last activity timestamp
  isOnline      Boolean       @default(false)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  emailVerified DateTime?
  active        Boolean        @default(true)
  conversations ConversationParticipant[]
  messages      Message[]

  @@map("users")
}

model Conversation {
  id           String                    @id @default(cuid())
  createdAt    DateTime                  @default(now())
  updatedAt    DateTime                  @updatedAt
  participants ConversationParticipant[]
  messages     Message[]

  @@map("conversations")
}

model ConversationParticipant {
  id             String       @id @default(cuid())
  userId         String
  conversationId String
  joinedAt       DateTime     @default(now())
  user           User         @relation(fields: [userId], references: [id])
  conversation   Conversation @relation(fields: [conversationId], references: [id])

  @@unique([userId, conversationId])
  @@map("conversation_participants")
}

model Message {
  id             String       @id @default(cuid())
  content        String
  senderId       String
  conversationId String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  read           Boolean      @default(false)
  sender         User         @relation(fields: [senderId], references: [id])
  conversation   Conversation @relation(fields: [conversationId], references: [id])

  @@map("messages")
}